type Chain struct {
	ChainId             *uint64 `gorm:"primaryKey;type:bigint(20);not null"`
	Height              uint64  `gorm:"type:bigint(20);not null"`
	HeightSwap          uint64  `gorm:"type:bigint(20);not null"`
	BackwardBlockNumber uint64  `gorm:"type:bigint(20);not null"`
}

type SrcTransaction struct {
	Hash        string       `gorm:"primaryKey;size:66;not null"`
	ChainId     uint64       `gorm:"type:bigint(20);not null"`
	State       uint64       `gorm:"type:bigint(20);not null"`
	Standard    uint8        `gorm:"type:int(8);not null"`
	Time        uint64       `gorm:"type:bigint(20);not null"`
	Fee         *BigInt      `gorm:"type:varchar(64);not null"`
	Height      uint64       `gorm:"type:bigint(20);not null"`
	User        string       `gorm:"type:varchar(66);not null"`
	DstChainId  uint64       `gorm:"type:bigint(20);not null"`
	Contract    string       `gorm:"type:varchar(66);not null"`
	Key         string       `gorm:"type:varchar(8192);not null"`
	Param       string       `gorm:"type:varchar(8192);not null"`
	SrcTransfer *SrcTransfer `gorm:"foreignKey:TxHash;references:Hash"`
	SrcSwap     *SrcSwap     `gorm:"foreignKey:TxHash;references:Hash"`
}

type SrcTransfer struct {
	TxHash     string  `gorm:"primaryKey;size:66;not null"`
	ChainId    uint64  `gorm:"type:bigint(20);not null"`
	Time       uint64  `gorm:"type:bigint(20);not null"`
	Standard    uint8        `gorm:"type:int(8);not null"`
	Asset      string  `gorm:"type:varchar(66);not null"`
	From       string  `gorm:"type:varchar(66);not null"`
	To         string  `gorm:"type:varchar(66);not null"`
	Amount     *BigInt `gorm:"type:varchar(64);not null"`
	DstChainId uint64  `gorm:"type:bigint(20);not null"`
	DstAsset   string  `gorm:"type:varchar(66);not null"`
	DstUser    string  `gorm:"type:varchar(66);not null"`
}

type SrcSwap struct {
	TxHash     string  `gorm:"primaryKey;size:66;not null"`
	ChainId    uint64  `gorm:"type:bigint(20);not null"`
	Time       uint64  `gorm:"type:bigint(20);not null"`
	Asset      string  `gorm:"type:varchar(66);not null"`
	From       string  `gorm:"type:varchar(66);not null"`
	To         string  `gorm:"type:varchar(66);not null"`
	Amount     *BigInt `gorm:"type:varchar(64);not null"`
	PoolId     uint64  `gorm:"type:bigint(20);not null"`
	DstChainId uint64  `gorm:"type:bigint(20);not null"`
	DstAsset   string  `gorm:"type:varchar(66);not null"`
	DstUser    string  `gorm:"type:varchar(66);not null"`
	Type       uint64  `gorm:"type:bigint(20);not null"`
}

type PolyTransaction struct {
	Hash       string  `gorm:"primaryKey;size:66;not null"`
	ChainId    uint64  `gorm:"type:bigint(20);not null"`
	State      uint64  `gorm:"type:bigint(20);not null"`
	Time       uint64  `gorm:"type:bigint(20);not null"`
	Fee        *BigInt `gorm:"type:varchar(64);not null"`
	Height     uint64  `gorm:"type:bigint(20);not null"`
	SrcChainId uint64  `gorm:"type:bigint(20);not null"`
	SrcHash    string  `gorm:"size:66;not null"`
	DstChainId uint64  `gorm:"type:bigint(20);not null"`
	Key        string  `gorm:"type:varchar(8192);not null"`
}

type DstTransaction struct {
	Hash        string       `gorm:"primaryKey;size:66;not null"`
	ChainId     uint64       `gorm:"type:bigint(20);not null"`
	State       uint64       `gorm:"type:bigint(20);not null"`
	Standard    uint8        `gorm:"type:int(8);not null"`
	Time        uint64       `gorm:"type:bigint(20);not null"`
	Fee         *BigInt      `gorm:"type:varchar(64);not null"`
	Height      uint64       `gorm:"type:bigint(20);not null"`
	SrcChainId  uint64       `gorm:"type:bigint(20);not null"`
	Contract    string       `gorm:"type:varchar(66);not null"`
	PolyHash    string       `gorm:"size:66;not null"`
	DstTransfer *DstTransfer `gorm:"foreignKey:TxHash;references:Hash"`
	DstSwap     *DstSwap     `gorm:"foreignKey:TxHash;references:Hash"`
}

type DstTransfer struct {
	TxHash  string  `gorm:"primaryKey;size:66;not null"`
	ChainId uint64  `gorm:"type:bigint(20);not null"`
	Standard    uint8        `gorm:"type:int(8);not null"`
	Time    uint64  `gorm:"type:bigint(20);not null"`
	Asset   string  `gorm:"type:varchar(66);not null"`
	From    string  `gorm:"type:varchar(66);not null"`
	To      string  `gorm:"type:varchar(66);not null"`
	Amount  *BigInt `gorm:"type:varchar(64);not null"`
}

type DstSwap struct {
	TxHash     string  `gorm:"primaryKey;size:66;not null"`
	ChainId    uint64  `gorm:"type:bigint(20);not null"`
	Time       uint64  `gorm:"type:bigint(20);not null"`
	PoolId     uint64  `gorm:"type:bigint(20);not null"`
	InAsset    string  `gorm:"type:varchar(66);not null"`
	InAmount   *BigInt `gorm:"type:varchar(64);not null"`
	OutAsset   string  `gorm:"type:varchar(66);not null"`
	OutAmount  *BigInt `gorm:"type:varchar(64);not null"`
	DstChainId uint64  `gorm:"type:bigint(20);not null"`
	DstAsset   string  `gorm:"type:varchar(66);not null"`
	DstUser    string  `gorm:"type:varchar(66);not null"`
	Type       uint64  `gorm:"type:bigint(20);not null"`
}

type WrapperTransaction struct {
	Hash         string  `gorm:"primaryKey;size:66;not null"`
	User         string  `gorm:"type:varchar(66);not null"`
	SrcChainId   uint64  `gorm:"type:bigint(20);not null"`
	BlockHeight  uint64  `gorm:"type:bigint(20);not null"`
	Standard     uint8   `gorm:"type:int(8);not null"`
	Time         uint64  `gorm:"type:bigint(20);not null"`
	DstChainId   uint64  `gorm:"type:bigint(20);not null"`
	DstUser      string  `gorm:"type:varchar(66);not null"`
	ServerId     uint64  `gorm:"type:bigint(20);not null"`
	FeeTokenHash string  `gorm:"size:66;not null"`
	FeeAmount    *BigInt `gorm:"type:varchar(64);not null"`
	Status       uint64  `gorm:"type:bigint(20);not null"`
}


type TokenBasic struct {
	Name         string         `gorm:"primaryKey;size:64;not null"`
	Precision    uint64         `gorm:"type:bigint(20);not null"`
	Price        int64          `gorm:"size:64;not null"`
	Ind          uint64         `gorm:"type:bigint(20);not null"`
	Time         int64          `gorm:"type:bigint(20);not null"`
	Standard     uint8          `gorm:"type:int(8);not null"`     // 0为erc20， 1为erc721
	Meta         string         `gorm:"type:varchar(128)"`
	MetaFetcherType int            `gorm:"type:int(8);not null"`
	Property     int64          `gorm:"type:bigint(20);not null"`
	PriceMarkets []*PriceMarket `gorm:"foreignKey:TokenBasicName;references:Name"`
	Tokens       []*Token       `gorm:"foreignKey:TokenBasicName;references:Name"`
}

type PriceMarket struct {
	TokenBasicName string      `gorm:"primaryKey;size:64;not null"`
	MarketName     string      `gorm:"primaryKey;size:64;not null"`
	Name           string      `gorm:"size:64;not null"`
	Price          int64       `gorm:"type:bigint(20);not null"`
	Ind            uint64      `gorm:"type:bigint(20);not null"`
	Time           int64       `gorm:"type:bigint(20);not null"`
	TokenBasic     *TokenBasic `gorm:"foreignKey:TokenBasicName;references:Name"`
}

type Token struct {
	Hash           string      `gorm:"primaryKey;size:66;not null"`
	ChainId        uint64      `gorm:"primaryKey;type:bigint(20);not null"`
	Name           string      `gorm:"size:64;not null"`
	Precision      uint64      `gorm:"type:bigint(20);not null"`
	TokenBasicName string      `gorm:"size:64;not null"`
	Standard       uint8       `gorm:"type:int(8);not null"`
	Property       int64       `gorm:"type:bigint(20);not null"`
	TokenBasic     *TokenBasic `gorm:"foreignKey:TokenBasicName;references:Name"`
	TokenMaps      []*TokenMap `gorm:"foreignKey:SrcTokenHash,SrcChainId;references:Hash,ChainId"`
}

type TokenMap struct {
	SrcChainId   uint64 `gorm:"primaryKey;type:bigint(20);not null"`
	SrcTokenHash string `gorm:"primaryKey;size:66;not null"`
	SrcToken     *Token `gorm:"foreignKey:SrcTokenHash,SrcChainId;references:Hash,ChainId"`
	DstChainId   uint64 `gorm:"primaryKey;type:bigint(20);not null"`
	DstTokenHash string `gorm:"primaryKey;size:66;not null"`
	DstToken     *Token `gorm:"foreignKey:DstTokenHash,DstChainId;references:Hash,ChainId"`
	Property     int64  `gorm:"type:bigint(20);not null"`
	Standard     uint8  `gorm:"type:int(8);not null"`
}


type ChainFee struct {
	ChainId        uint64      `gorm:"primaryKey;type:bigint(20);not null"`
	TokenBasicName string      `gorm:"size:64;not null"`
	TokenBasic     *TokenBasic `gorm:"foreignKey:TokenBasicName;references:Name"`
	MaxFee         *BigInt     `gorm:"type:varchar(64);not null"`
	MinFee         *BigInt     `gorm:"type:varchar(64);not null"`
	ProxyFee       *BigInt     `gorm:"type:varchar(64);not null"`
	Ind            uint64      `gorm:"type:bigint(20);not null"`
	Time           int64       `gorm:"type:bigint(20);not null"`
}
